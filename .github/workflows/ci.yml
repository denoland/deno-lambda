name: Test
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build docker image
        working-directory: ./tests
        run: |
          docker build -f Dockerfile -t test-runner ..
          docker create --name extract test-runner
      - name: Run tests
        run: |
          docker run test-runner
      - name: Extract artifacts
        run: |
          docker cp extract:/bin/deno amz-deno
          docker cp extract:/src/runtime/deno-lambda-layer.zip deno-lambda-layer.zip
          docker cp extract:/src/runtime/deno-lambda-example.zip deno-lambda-example.zip
          gzip -9 amz-deno

  test_example:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: denolib/setup-deno@master
        with:
          deno-version: 0.40.0
      - name: start a local dynamodb
        run: |
          mkdir dyno
          curl -q https://s3-us-west-2.amazonaws.com/dynamodb-local/dynamodb_local_latest.tar.gz | tar --directory=dyno -zxf -
          java -D"java.library.path=$DIR/DynamoDBLocal_lib" -jar "dyno/DynamoDBLocal.jar" -sharedDb &
          sleep 4.2
      - name: run serverless tests
        working-directory: example-serverless
        run: |
          AWS_ACCESS_KEY_ID=fakeMyKeyId AWS_SECRET_ACCESS_KEY=fakeSecretAccessKey AWS_DEFAULT_REGION=local deno test --allow-env --allow-net test.ts
